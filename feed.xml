<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://pratajo.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://pratajo.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-01-23T22:03:47+00:00</updated><id>https://pratajo.github.io/feed.xml</id><title type="html">blank</title><subtitle>My personal website. </subtitle><entry><title type="html">Installing Fedora 41 KDE Plasma</title><link href="https://pratajo.github.io/blog/2025/fedora-41-kde/" rel="alternate" type="text/html" title="Installing Fedora 41 KDE Plasma"/><published>2025-01-08T15:09:00+00:00</published><updated>2025-01-08T15:09:00+00:00</updated><id>https://pratajo.github.io/blog/2025/fedora-41-kde</id><content type="html" xml:base="https://pratajo.github.io/blog/2025/fedora-41-kde/"><![CDATA[<img-comparison-slider> <figure slot="first"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/fedora41kde_light-480.webp 480w,/assets/img/fedora41kde_light-800.webp 800w,/assets/img/fedora41kde_light-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/fedora41kde_light.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure slot="second"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/fedora41kde_dark-480.webp 480w,/assets/img/fedora41kde_dark-800.webp 800w,/assets/img/fedora41kde_dark-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/fedora41kde_dark.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </img-comparison-slider> <p> </p> <h6 id="get-fedora-41-kde-plasma"><strong>Get Fedora 41 KDE Plasma</strong></h6> <p>Use Fedora Media Writer application to create a ‘Live USB’ or download the ISO image from the <a href="https://torrent.fedoraproject.org/">torrent</a> list.</p> <p>Fedora Media Writer is available for Linux and Microsoft Windows.</p> <p> </p> <h6 id="install-fedora"><strong>Install Fedora</strong></h6> <p>Fedora images are hybrid ISO images, so they can be used for DVD burning or flash drive creation. They also work on BIOS and UEFI systems.</p> <p>I recommend using the Fedora Media Writer application to create the bootable flash drive. There is also a version for Windows.</p> <p>As this is a “live” distribution, the new OS (operating system) will run from the DVD or pen drive without making any changes to the hard disk. You can test the OS and only then install it on the hard drive.</p> <p>During installation, leave the “root” account disabled. Create a user with administrative rights and a password.</p> <p>After installation, restart the computer and remove the DVD or flash drive. Log in, open <em>Terminal</em> and update the entire system with the following command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf update
</code></pre></div></div> <p>(enter password)</p> <p>Restart the computer to load a new kernel and start the updated applications. Restart on the desktop or with the <em>reboot</em> command.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>reboot
</code></pre></div></div> <p> </p> <h6 id="parameterize-dnf"><strong>Parameterize DNF</strong></h6> <p>Fedora uses DNF to install and update its software over the internet. It also automatically determines application dependencies.</p> <p><ins>Repositories Fedora</ins><br/> Fedora includes two repositories by default: fedora, with the same software packages as the DVD and updates, with updated packages. These repositories <em>sign</em> their RPM files to make sure they are valid when they are downloaded.</p> <p><ins>Other Repositories</ins><br/> For applications that conflict with Fedora policy (MP3, DVD, MPEG, binary drivers, etc.) the <a href="https://rpmfusion.org/">RPM Fusion</a> repository is required.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-<span class="si">$(</span>rpm <span class="nt">-E</span> %fedora<span class="si">)</span>.noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-<span class="si">$(</span>rpm <span class="nt">-E</span> %fedora<span class="si">)</span>.noarch.rpm
</code></pre></div></div> <p> </p> <h6 id="install-current-applications"><strong>Install current applications</strong></h6> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>thunderbird ktorrent gimp p7zip kde-l10n-Portuguese unrar gsmartcontrol libreoffice-langpack-pt-PT WoeUSB gimp-help gimp-help-pt_BR vlc librecad icedtea-web inkscape scribus
</code></pre></div></div> <p> </p> <h6 id="install-codecs"><strong>Install codecs</strong></h6> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>gstreamer-plugin-crystalhd gstreamer-plugins-espeak gstreamer1-plugin-openh264 gstreamer1-libav gstreamer1-plugins-ugly gstreamer1-plugins-good-extras gstreamer1-plugins-bad-free-extras gstreamer1-plugins-bad-freeworld qt5-qtwebengine-freeworld
</code></pre></div></div> <p> </p> <h6 id="install-hp-printers-and-scanners"><strong>Install HP printers and scanners</strong></h6> <p><ins>HP printers</ins></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>hplip hplip-gui
</code></pre></div></div> <p><ins>Scanners</ins></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>xsane libsane-hpaio sane-backends sane-backends-drivers-scanners skanlite
</code></pre></div></div> <p> </p> <h6 id="installing-kdevelop-ide-for-developers"><strong>Installing <a href="https://kdevelop.org/">KDevelop IDE</a> (for developers)</strong></h6> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf group <span class="nb">install </span>development-tools
<span class="nb">sudo </span>dnf group <span class="nb">install </span>c-development
<span class="nb">sudo </span>dnf <span class="nb">install </span>kdevelop kdevelop-pg-qt kdevelop-php
</code></pre></div></div> <p> </p> <script src="https://giscus.app/client.js" data-repo="pratajo/pratajo.github.io" data-repo-id="R_kgDONl93Sw" data-category="Comments" data-category-id="DIC_kwDONl93S84Cl7yv" data-mapping="title" data-strict="1" data-reactions-enabled="1" data-emit-metadata="0" data-input-position="bottom" data-theme="preferred_color_scheme" data-lang="en" crossorigin="anonymous" async=""> </script>]]></content><author><name></name></author><category term="operating-systems"/><category term="fedora"/><category term="kde"/><summary type="html"><![CDATA[Fedora 41 KDE Plasma]]></summary></entry><entry><title type="html">Installing Fedora 41 Xfce</title><link href="https://pratajo.github.io/blog/2025/fedora-41-xfce/" rel="alternate" type="text/html" title="Installing Fedora 41 Xfce"/><published>2025-01-08T14:09:00+00:00</published><updated>2025-01-08T14:09:00+00:00</updated><id>https://pratajo.github.io/blog/2025/fedora-41-xfce</id><content type="html" xml:base="https://pratajo.github.io/blog/2025/fedora-41-xfce/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/fedora41xfce-480.webp 480w,/assets/img/fedora41xfce-800.webp 800w,/assets/img/fedora41xfce-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/fedora41xfce.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p> </p> <h6 id="get-fedora-41-xfce"><strong>Get Fedora 41 Xfce</strong></h6> <p>Use Fedora Media Writer application to create a ‘Live USB’ or download the ISO image from the <a href="https://torrent.fedoraproject.org/">torrent</a> list.</p> <p>Fedora Media Writer is available for Linux and Microsoft Windows.</p> <p> </p> <h6 id="install-fedora"><strong>Install Fedora</strong></h6> <p>Fedora images are hybrid ISO images, so they can be used for DVD burning or flash drive creation. They also work on BIOS and UEFI systems.</p> <p>I recommend using the Fedora Media Writer application to create the bootable flash drive. There is also a version for Windows.</p> <p>As this is a “live” distribution, the new OS (operating system) will run from the DVD or pen drive without making any changes to the hard disk. You can test the OS and only then install it on the hard drive.</p> <p>During installation, leave the “root” account disabled. Create a user with administrative rights and a password.</p> <p>After installation, restart the computer and remove the DVD or flash drive. Log in, open <em>Terminal</em> and update the entire system with the following command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf update
</code></pre></div></div> <p>(enter password)</p> <p>Restart the computer to load a new kernel and start the updated applications. Restart on the desktop or with the <em>reboot</em> command.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>reboot
</code></pre></div></div> <p> </p> <h6 id="parameterize-dnf"><strong>Parameterize DNF</strong></h6> <p>Fedora uses DNF to install and update its software over the internet. It also automatically determines application dependencies.</p> <p><ins>Repositories Fedora</ins><br/> Fedora includes two repositories by default: fedora, with the same software packages as the DVD and updates, with updated packages. These repositories <em>sign</em> their RPM files to make sure they are valid when they are downloaded.</p> <p><ins>Other Repositories</ins><br/> For applications that conflict with Fedora policy (MP3, DVD, MPEG, binary drivers, etc.) the <a href="https://rpmfusion.org/">RPM Fusion</a> repository is required.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-<span class="si">$(</span>rpm <span class="nt">-E</span> %fedora<span class="si">)</span>.noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-<span class="si">$(</span>rpm <span class="nt">-E</span> %fedora<span class="si">)</span>.noarch.rpm
</code></pre></div></div> <p> </p> <h6 id="install-current-applications"><strong>Install current applications</strong></h6> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>thunderbird p7zip unrar gsmartcontrol libreoffice-calc libreoffice-draw libreoffice-impress libreoffice-langpack-pt-PT libreoffice-writer vlc eog
</code></pre></div></div> <p> </p> <h6 id="install-codecs"><strong>Install codecs</strong></h6> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>gstreamer-plugin-crystalhd gstreamer-plugins-espeak gstreamer1-plugin-openh264 gstreamer1-libav gstreamer1-plugins-ugly gstreamer1-plugins-good-extras gstreamer1-plugins-bad-free-extras gstreamer1-plugins-bad-freeworld qt5-qtwebengine-freeworld
</code></pre></div></div> <p> </p> <h6 id="install-hp-printers-and-scanners"><strong>Install HP printers and scanners</strong></h6> <p><ins>HP printers</ins></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>hplip hplip-gui
</code></pre></div></div> <p><ins>Scanners</ins></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>xsane libsane-hpaio sane-backends sane-backends-drivers-scanners simple-scan
</code></pre></div></div> <p> </p> <h6 id="remove-redundant-applications"><strong>Remove redundant applications</strong></h6> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf remove gnumeric claws-mail geany
</code></pre></div></div> <p> </p> <h6 id="automatic-login-optional"><strong>Automatic login (optional)</strong></h6> <p>Edit /etc/lightdm/lightdm.conf –&gt; autologin-user = <em>username</em></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nano /etc/lightdm/lightdm.conf
</code></pre></div></div> <p> </p> <script src="https://giscus.app/client.js" data-repo="pratajo/pratajo.github.io" data-repo-id="R_kgDONl93Sw" data-category="Comments" data-category-id="DIC_kwDONl93S84Cl7yv" data-mapping="title" data-strict="1" data-reactions-enabled="1" data-emit-metadata="0" data-input-position="bottom" data-theme="preferred_color_scheme" data-lang="en" crossorigin="anonymous" async=""> </script>]]></content><author><name></name></author><category term="operating-systems"/><category term="fedora"/><category term="xfce"/><summary type="html"><![CDATA[Fedora 41 Xfce]]></summary></entry><entry><title type="html">Jekyll on Fedora - Installation and use</title><link href="https://pratajo.github.io/blog/2025/jekyll/" rel="alternate" type="text/html" title="Jekyll on Fedora - Installation and use"/><published>2025-01-01T15:09:00+00:00</published><updated>2025-01-01T15:09:00+00:00</updated><id>https://pratajo.github.io/blog/2025/jekyll</id><content type="html" xml:base="https://pratajo.github.io/blog/2025/jekyll/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/jekyll-480.webp 480w,/assets/img/jekyll-800.webp 800w,/assets/img/jekyll-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/jekyll.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p> </p> <p><a href="https://jekyllrb.com/">Jekyll</a> is a generator of static sites, with blog recognition, for personal sites, projects or organizations, with support for GitHub.</p> <p> </p> <h6 id="installing-jekyll"><strong>Installing Jekyll</strong></h6> <p>These instructions apply to Fedora 41 KDE Plasma.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf group <span class="nb">install </span>development-tools
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>ruby ruby-devel openssl-devel redhat-rpm-config gcc-c++
</code></pre></div></div> <p>Avoid installing RubyGems packages (called gems) as the root user. Instead, set up a gem installation directory in your user account.<br/> The following commands add environment variables to your ~/. bashrc to configure the gem installation path. Run the commands with your user:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s1">'# Install Ruby Gems to ~/gems'</span> <span class="o">&gt;&gt;</span> ~/.bashrc
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s1">'export GEM_HOME="$HOME/gems"'</span> <span class="o">&gt;&gt;</span> ~/.bashrc
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s1">'export PATH="$HOME/gems/bin:$PATH"'</span> <span class="o">&gt;&gt;</span> ~/.bashrc
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">source</span> ~/.bashrc
</code></pre></div></div> <p>Finally install Jekyll.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jekyll new mysite
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>mysite
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite<span class="nv">$ </span>bundle <span class="nb">exec </span>jekyll serve <span class="nt">--livereload</span>
</code></pre></div></div> <p>Create a folder with the name, for example, “mysite”, for the Jekyll website. Enter the folder and build the website.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem <span class="nb">install </span>jekyll bundler
</code></pre></div></div> <p>Open your browser at <a href="http://localhost:4000">http://localhost:4000</a></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/jekyll2-480.webp 480w,/assets/img/jekyll2-800.webp 800w,/assets/img/jekyll2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/jekyll2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> The theme installed by default: minima </div> <p> </p> <h6 id="host-a-website-on-github"><strong>Host a website on GitHub</strong></h6> <p>Create a new public repository on <a href="https://github.com/">GitHub</a>, in the format <em>username</em>.github.io, where <em>username</em> is your username.</p> <p>Install the GitHub CLI (gh) and run it to automatically store your credentials on GitHub. You can then choose HTTPS as your preferred protocol for Git operations, and answer “yes” to the prompt that will ask if you would like to authenticate to Git with your GitHub credentials.</p> <p>Install the GitHub CLI (gh) and run it to automatically store your credentials on GitHub. You can then choose HTTPS as your preferred protocol for Git operations, and answer “yes” to the prompt that will ask if you would like to authenticate to Git with your GitHub credentials.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>gh
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gh auth login
</code></pre></div></div> <p>Select the following answers to the following questions:</p> <p>Where do you use GitHub? <strong>GitHub.com</strong><br/> What is your preferred protocol for Git operations on this host? <strong>HTTPS</strong><br/> Authenticate Git with your GitHub credentials? <strong>Yes</strong><br/> How would you like to authenticate GitHub CLI? <strong>Login with a web browser</strong><br/> ! First copy your one-time code: XXXX-XXXX (It is a code with letters and numbers that will be used in the browser in the next step, right after authenticating.) Press Enter to open https://github.com/login/device in your browser… ✓ Authentication complete.</p> <p>Initialize the Git repository and sync the site.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite<span class="nv">$ </span>git init
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite<span class="nv">$ </span>git checkout <span class="nt">-b</span> master
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite<span class="nv">$ </span>git status
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite<span class="nv">$ </span>git add <span class="nb">.</span>
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite<span class="nv">$ </span>git config <span class="nt">--global</span> user.email <span class="s2">"me@example.com"</span>
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite<span class="nv">$ </span>git config <span class="nt">--global</span> user.name <span class="s2">"my username"</span>
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite<span class="nv">$ </span>git commit <span class="nt">-m</span> <span class="s2">"Commit inicial"</span>
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite<span class="nv">$ </span>git remote add origin https://github.com/username/username.github.io.git
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite<span class="nv">$ </span>git push <span class="nt">-u</span> origin master
</code></pre></div></div> <p> </p> <h6 id="clone-a-github-pages-site-locally"><strong>Clone a GitHub Pages site locally</strong></h6> <p>After creating the site on GitHub, we can clone the site locally. To do this, go to the folder where you want to store the project and clone the new repository. In this example I will do the cloning inside the “mysite” folder. Cloning will automatically create a folder named <em>username</em>.github.io</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite<span class="nv">$ </span>git clone https://github.com/username/username.github.io
</code></pre></div></div> <p>After you create or change a file, for example index.html, push the new file or new version to GitHub.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite<span class="nv">$ </span><span class="nb">cd </span>username.github.io
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite/username.github.io<span class="nv">$ </span>git add index.html <span class="o">(</span><span class="k">if </span>it is a new file<span class="o">)</span>
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite/username.github.io<span class="nv">$ </span>git commit index.html <span class="nt">-m</span> “Initial commit”
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/mysite/username.github.io<span class="nv">$ </span>git push origin master
</code></pre></div></div> <p>And we have the website at https://<em>username</em>.github.io</p> <p>❗ If you come across “error: pathspect ‘commit’ did not match any file(s) known to git”, write the command manually in Terminal instead of copying/pasting from the website.</p> <p> </p> <h6 id="uninstalling-jekyll"><strong>Uninstalling Jekyll</strong></h6> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem uninstall jekyll
</code></pre></div></div> <p> </p> <script src="https://giscus.app/client.js" data-repo="pratajo/pratajo.github.io" data-repo-id="R_kgDONl93Sw" data-category="Comments" data-category-id="DIC_kwDONl93S84Cl7yv" data-mapping="title" data-strict="1" data-reactions-enabled="1" data-emit-metadata="0" data-input-position="bottom" data-theme="preferred_color_scheme" data-lang="en" crossorigin="anonymous" async=""> </script>]]></content><author><name></name></author><category term="applications"/><category term="fedora"/><category term="development"/><category term="linux"/><summary type="html"><![CDATA[Generator of static sites with blog recognition]]></summary></entry><entry><title type="html">LAMP on Fedora</title><link href="https://pratajo.github.io/blog/2024/lamp/" rel="alternate" type="text/html" title="LAMP on Fedora"/><published>2024-12-30T15:09:00+00:00</published><updated>2024-12-30T15:09:00+00:00</updated><id>https://pratajo.github.io/blog/2024/lamp</id><content type="html" xml:base="https://pratajo.github.io/blog/2024/lamp/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/lamp-480.webp 480w,/assets/img/lamp-800.webp 800w,/assets/img/lamp-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/lamp.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p> </p> <p>The LAMP stack is a set of programs for web development. It consists of Linux, Apache, MySQL and PHP. Together, they allow you to manage a web server.</p> <p>This article shows you how to install and configure the Apache web server, PHP and MySQL on Fedora.</p> <h6 id="install-apache"><strong>Install Apache</strong></h6> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>httpd
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl <span class="nb">enable </span>httpd.service
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl start httpd.service
</code></pre></div></div> <p>To check that the HTTP server is working correctly, run the following command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl status httpd.service
</code></pre></div></div> <p>(press the Q key to exit and return to the terminal prompt)</p> <p>or open the link <a href="http://localhost/">http://localhost/</a></p> <p> </p> <h6 id="install-php"><strong>Install PHP</strong></h6> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>php php-cli php-common php-opcache php-fpm php-mysqlnd php-pecl-zip php-devel php-gd php-pecl-mcrypt php-mbstring php-curl php-xml php-pear php-bcmath php-json
</code></pre></div></div> <p>Test PHP by creating a document in /var/www/html with the command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nano /var/www/html/info.php
</code></pre></div></div> <p>and using the function phpinfo()</p> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
    <span class="nb">phpinfo</span><span class="p">();</span>
<span class="cp">?&gt;</span>
</code></pre></div></div> <p>Restart your Apache server to ensure it works with the new PHP installed.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl restart httpd.service
</code></pre></div></div> <p>Open the link <a href="http://localhost/info.php">http://localhost/info.php</a></p> <p>You will get a page with the PHP version and system data.</p> <p> </p> <h6 id="configure-mariadb"><strong>Configure MariaDB</strong></h6> <p>Start the database with:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl <span class="nb">enable </span>mariadb
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl start mariadb
</code></pre></div></div> <p>and check its operation:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl status mariadb
</code></pre></div></div> <p>Run the security script before first use with</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>mysql_secure_installation
</code></pre></div></div> <p>and answer the following questions:</p> <ul> <li>Enter password for user root - Press the Enter key. As the command is running with sudo privileges, the password is not required.</li> <li>Switch to unit_socket authentication - N</li> <li>Change the root password? - N. It is safe to allow local sudo access with the default root password.</li> <li>Remove anonymous users? - Y</li> <li>Disallow root login remotely? - Y</li> <li>Remove test database and access to it? - Y</li> <li>Reload privilege tables now? - Y</li> </ul> <p>Access the database with:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>mysql
</code></pre></div></div> <p>Create a database, e.g. website.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="n">website</span><span class="p">;</span>
</code></pre></div></div> <p>MySQL should answer ‘Query OK’ after each line.</p> <p>Create a user account for the web application to access. Provide a username and a secure password, both enclosed in single commas (’x‘).</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">USER</span> <span class="s1">'username'</span> <span class="n">IDENTIFIED</span> <span class="k">BY</span> <span class="s1">'password'</span><span class="p">;</span>
</code></pre></div></div> <p>Finally, grant all rights to the user.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">GRANT</span> <span class="k">ALL</span> <span class="k">ON</span> <span class="n">website</span><span class="p">.</span><span class="o">*</span> <span class="k">TO</span> <span class="s1">'username'</span><span class="p">;</span>
</code></pre></div></div> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">FLUSH</span> <span class="k">PRIVILEGES</span><span class="p">;</span>
</code></pre></div></div> <p>Exit the SQL shell and return to the terminal prompt.</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">quit</span>
</code></pre></div></div> <p> </p> <h6 id="check-lamp-stack-installation"><strong>Check LAMP stack installation</strong></h6> <p>To check the components of the LAMP stack, embed a block of PHP code containing a database connection, within an HTML page. PHP code can be integrated into an HTML file using the tag &lt;?php. The PHP code block can then connect to an SQL-based database using the command mysqli_connect. Provide the correct database credentials for the connection.</p> <p>To test all components of the LAMP stack, follow these steps:</p> <ol> <li>In Terminal, change to the directory var/www/html and create a new file, now the phptest.php</li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> /var/www/html
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nano phptest.php
</code></pre></div></div> <ol> <li>Add the following content to the file. Confirm that the servername variable is set to localhost. Replace USERNAME and PASSWORD with the credentials for the WEB database user account (not the root password).</li> </ol> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>PHP Test<span class="nt">&lt;/title&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="s1">'&lt;p&gt;Welcome to the Site!&lt;/p&gt;'</span><span class="p">;</span>
        <span class="nv">$servername</span> <span class="o">=</span> <span class="s2">"localhost"</span><span class="p">;</span>
        <span class="nv">$username</span> <span class="o">=</span> <span class="s2">"USERNAME"</span><span class="p">;</span>
        <span class="nv">$password</span> <span class="o">=</span> <span class="s2">"PASSWORD"</span><span class="p">;</span>
        <span class="c1">// Create the MySQL connection</span>
        <span class="nv">$conn</span> <span class="o">=</span> <span class="nb">mysqli_connect</span><span class="p">(</span><span class="nv">$servername</span><span class="p">,</span> <span class="nv">$username</span><span class="p">,</span> <span class="nv">$password</span><span class="p">);</span>
        <span class="c1">// If the conn variable is empty, the connection has failed. The output for the failure case includes the error message</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$conn</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">die</span><span class="p">(</span><span class="s1">'&lt;p&gt;Connection failed: &lt;/p&gt;'</span> <span class="mf">.</span> <span class="nf">mysqli_connect_error</span><span class="p">());</span>
        <span class="p">}</span>
        <span class="k">echo</span> <span class="s1">'&lt;p&gt;Connected successfully&lt;/p&gt;'</span><span class="p">;</span>
        <span class="cp">?&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div> <ol> <li> <p>Run the LAMP stack script test by opening the link <a href="http://localhost/phptest.php">http://localhost/phptest.php</a></p> </li> <li> <p>If the test is successful, the browser displays the message:</p> </li> </ol> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>       Welcome to the site!
       Connected successfully
</code></pre></div></div> <p> </p> <script src="https://giscus.app/client.js" data-repo="pratajo/pratajo.github.io" data-repo-id="R_kgDONl93Sw" data-category="Comments" data-category-id="DIC_kwDONl93S84Cl7yv" data-mapping="title" data-strict="1" data-reactions-enabled="1" data-emit-metadata="0" data-input-position="bottom" data-theme="preferred_color_scheme" data-lang="en" crossorigin="anonymous" async=""> </script>]]></content><author><name></name></author><category term="applications"/><category term="fedora"/><category term="development"/><category term="linux"/><summary type="html"><![CDATA[LAMP stack to manage a web server]]></summary></entry><entry><title type="html">Creating one or multiple buttons to copy text to the clipboard</title><link href="https://pratajo.github.io/blog/2024/copy-buttons/" rel="alternate" type="text/html" title="Creating one or multiple buttons to copy text to the clipboard"/><published>2024-12-20T15:09:00+00:00</published><updated>2024-12-20T15:09:00+00:00</updated><id>https://pratajo.github.io/blog/2024/copy-buttons</id><content type="html" xml:base="https://pratajo.github.io/blog/2024/copy-buttons/"><![CDATA[<p>To create a single “copy to clipboard” button on a website page, we can use simple code like this:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;script&gt;</span>
      <span class="kd">function</span> <span class="nf">copy_to_clipboard</span><span class="p">(</span><span class="nx">elm_id</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">text</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="nx">elm_id</span><span class="p">).</span><span class="nx">innerHTML</span><span class="p">;</span>

        <span class="nb">navigator</span><span class="p">.</span><span class="nx">clipboard</span><span class="p">.</span><span class="nf">writeText</span><span class="p">(</span><span class="nx">text</span><span class="p">);</span>
      <span class="p">}</span>
    <span class="nt">&lt;/script&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">"1"</span><span class="nt">&gt;</span>text to copy<span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">"copy_to_clipboard('1')"</span><span class="nt">&gt;</span>Copy<span class="nt">&lt;/button&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div> <p>If we need to have, on the same web page, several buttons in different text boxes, we repeat this code for each button, only being required to change the id attribute for each button. I usually use id=”1” for the first button on the page, id=”2” for the second button, and so on.</p> <p>If you want to have two or more buttons on the same frame, here is an example:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;script&gt;</span>
      <span class="kd">function</span> <span class="nf">copy_to_clipboard</span><span class="p">(</span><span class="nx">elm_id</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">text</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="nx">elm_id</span><span class="p">).</span><span class="nx">innerHTML</span><span class="p">;</span>

        <span class="nb">navigator</span><span class="p">.</span><span class="nx">clipboard</span><span class="p">.</span><span class="nf">writeText</span><span class="p">(</span><span class="nx">text</span><span class="p">);</span>
      <span class="p">}</span>
    <span class="nt">&lt;/script&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">"8"</span><span class="nt">&gt;</span>text to copy-1<span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">"copy_to_clipboard('8')"</span><span class="nt">&gt;</span>Copy<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">"9"</span><span class="nt">&gt;</span>text to copy-2<span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">"copy_to_clipboard('9')"</span><span class="nt">&gt;</span>Copy<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">"10"</span><span class="nt">&gt;</span>text to copy-3<span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">"copy_to_clipboard('10')"</span><span class="nt">&gt;</span>Copy<span class="nt">&lt;/button&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div> <p> </p> <script src="https://giscus.app/client.js" data-repo="pratajo/pratajo.github.io" data-repo-id="R_kgDONl93Sw" data-category="Comments" data-category-id="DIC_kwDONl93S84Cl7yv" data-mapping="title" data-strict="1" data-reactions-enabled="1" data-emit-metadata="0" data-input-position="bottom" data-theme="preferred_color_scheme" data-lang="en" crossorigin="anonymous" async=""> </script>]]></content><author><name></name></author><category term="applications"/><category term="development"/><category term="linux"/><summary type="html"><![CDATA[HTML and JavaScript]]></summary></entry><entry><title type="html">Photo Restoration with GIMP</title><link href="https://pratajo.github.io/blog/2024/photo-restoration/" rel="alternate" type="text/html" title="Photo Restoration with GIMP"/><published>2024-12-18T21:01:00+00:00</published><updated>2024-12-18T21:01:00+00:00</updated><id>https://pratajo.github.io/blog/2024/photo-restoration</id><content type="html" xml:base="https://pratajo.github.io/blog/2024/photo-restoration/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/restaurar-480.webp 480w,/assets/img/restaurar-800.webp 800w,/assets/img/restaurar-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/restaurar.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p> </p> <p>For photo restoration, it is essential to install the <em>Resynthesizer</em> plug-in in GIMP.</p> <p>On Fedora, the best way to get Resynthesizer is to install the flatpack version through Discover.</p> <p>Its use is very well demonstrated in a Davis MediaDesign <a href="https://daviesmediadesign.com/video-tutorials/gimp-2-10-tutorial-restore-and-repair-old-photos-with-severe-damage/">film</a>.</p> <p>I recommend scanning each photo in two formats, tiff and jpeg, both without compression and in the following resolutions:</p> <ul> <li>on paper - maximum 900 dpi (no higher resolution required)</li> <li>slides and negatives - 2,000 dpi or more</li> </ul> <p>Regarding the export of the photos in GIMP, I recommend reading the chapter “6. Getting Images out of GIMP” of the User Manual.</p> <p> </p> <script src="https://giscus.app/client.js" data-repo="pratajo/pratajo.github.io" data-repo-id="R_kgDONl93Sw" data-category="Comments" data-category-id="DIC_kwDONl93S84Cl7yv" data-mapping="title" data-strict="1" data-reactions-enabled="1" data-emit-metadata="0" data-input-position="bottom" data-theme="preferred_color_scheme" data-lang="en" crossorigin="anonymous" async=""> </script>]]></content><author><name></name></author><category term="applications"/><category term="restoration"/><category term="images"/><summary type="html"><![CDATA[Photo Restoration]]></summary></entry><entry><title type="html">Installing OpenIndiana Hipster 2022.10</title><link href="https://pratajo.github.io/blog/2024/openindiana/" rel="alternate" type="text/html" title="Installing OpenIndiana Hipster 2022.10"/><published>2024-02-18T00:32:13+00:00</published><updated>2024-02-18T00:32:13+00:00</updated><id>https://pratajo.github.io/blog/2024/openindiana</id><content type="html" xml:base="https://pratajo.github.io/blog/2024/openindiana/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/openindiana2022-480.webp 480w,/assets/img/openindiana2022-800.webp 800w,/assets/img/openindiana2022-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/openindiana2022.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p> </p> <h6 id="get-the-openindiana-hipster"><strong>Get the OpenIndiana Hipster</strong></h6> <p>Get the image from the <a href="https://www.openindiana.org/downloads/">official website</a> and save the Pen Drive with the command (in linux):</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>pratajo@amd64 ~]<span class="nv">$ </span>su -
   <span class="o">(</span>enter root password<span class="o">)</span>
<span class="o">[</span>root@amd64 ~]<span class="nv">$ </span><span class="nb">dd </span><span class="k">if</span><span class="o">=</span>image.usb <span class="nv">of</span><span class="o">=</span>/dev/sdb
</code></pre></div></div> <p>Attention: to confirm the USB drive letter, use the command <em>lsblk</em></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>root@amd64 ~]<span class="nv">$ </span>lsblk
</code></pre></div></div> <p> </p> <h6 id="install"><strong>Install</strong></h6> <p>I recommend reading the Hipster Handbook before installation. You will find instructions that may have application on your specific hardware.</p> <p>In the case of a “live” distribution, the new operating system will run from the USB stick, without making any changes to the hard disk. You can test Hipster and, if you want, install it on your hard drive.</p> <p>During installation, create a secure password for Root (administrator) and a user for yourself.</p> <p>Finally restart the computer, remove the USB stick, enter your personal user and update the entire system.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>pratajo@amd64 ~]<span class="nv">$ </span>su -
   <span class="o">(</span>enter root password<span class="o">)</span>
<span class="o">[</span>root@amd64 ~]<span class="nv">$ </span><span class="nb">dd </span><span class="k">if</span><span class="o">=</span>image.usb <span class="nv">of</span><span class="o">=</span>/dev/sdb
</code></pre></div></div> <p> </p> <h6 id="add-repositories"><strong>Add repositories</strong></h6> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@amd64:~<span class="nv">$ </span>pkg set-publisher <span class="nt">-O</span> https://pkg.openindiana.org/hipster-encumbered hipster-encumbered
</code></pre></div></div> <p> </p> <h6 id="install-applications"><strong>Install applications</strong></h6> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@amd64:~<span class="nv">$ </span>pkg <span class="nb">install </span>vlc
</code></pre></div></div> <p> </p> <script src="https://giscus.app/client.js" data-repo="pratajo/pratajo.github.io" data-repo-id="R_kgDONl93Sw" data-category="Comments" data-category-id="DIC_kwDONl93S84Cl7yv" data-mapping="title" data-strict="1" data-reactions-enabled="1" data-emit-metadata="0" data-input-position="bottom" data-theme="preferred_color_scheme" data-lang="en" crossorigin="anonymous" async=""> </script>]]></content><author><name></name></author><category term="operating-systems"/><category term="openindiana"/><category term="hipster"/><category term="unix"/><summary type="html"><![CDATA[OpenIndiana Hipster 2022.10]]></summary></entry><entry><title type="html">Installing Development Tools and KDevelop on Fedora</title><link href="https://pratajo.github.io/blog/2023/kdevelop/" rel="alternate" type="text/html" title="Installing Development Tools and KDevelop on Fedora"/><published>2023-02-28T15:09:00+00:00</published><updated>2023-02-28T15:09:00+00:00</updated><id>https://pratajo.github.io/blog/2023/kdevelop</id><content type="html" xml:base="https://pratajo.github.io/blog/2023/kdevelop/"><![CDATA[<p>This article shows you how to install the development tools for C, C ++, Python, QML / JavaScript and PHP as well <a href="https://kdevelop.org/">KDevelop</a> IDE.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf group <span class="nb">install </span>development-tools
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf group <span class="nb">install </span>c-development
</code></pre></div></div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>dnf <span class="nb">install </span>kdevelop kdevelop-pg-qt kdevelop-php
</code></pre></div></div> <p> </p> <script src="https://giscus.app/client.js" data-repo="pratajo/pratajo.github.io" data-repo-id="R_kgDONl93Sw" data-category="Comments" data-category-id="DIC_kwDONl93S84Cl7yv" data-mapping="title" data-strict="1" data-reactions-enabled="1" data-emit-metadata="0" data-input-position="bottom" data-theme="preferred_color_scheme" data-lang="en" crossorigin="anonymous" async=""> </script>]]></content><author><name></name></author><category term="applications"/><category term="development"/><category term="linux"/><summary type="html"><![CDATA[Development Tools and KDevelop]]></summary></entry><entry><title type="html">How to change the hostname on Linux</title><link href="https://pratajo.github.io/blog/2022/hostname/" rel="alternate" type="text/html" title="How to change the hostname on Linux"/><published>2022-06-27T15:09:00+00:00</published><updated>2022-06-27T15:09:00+00:00</updated><id>https://pratajo.github.io/blog/2022/hostname</id><content type="html" xml:base="https://pratajo.github.io/blog/2022/hostname/"><![CDATA[<p>If we forget to customize the machine name during the installation of the operating system, we can do it later. The easiest method is using the command line.</p> <p>This instruction is valid for a computer used at home, which is not part of a enterprise network. We use the <em>hostnamectl</em> command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hostnamectl set-hostname new-name
<span class="nb">ls</span>
</code></pre></div></div> <p>This name is stored in the /etc/hostname file.</p> <p>We can simultaneously check the machine name, operating system, kernel version and architecture with this command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hostnamectl status
<span class="nb">ls</span>
</code></pre></div></div> <p> </p> <script src="https://giscus.app/client.js" data-repo="pratajo/pratajo.github.io" data-repo-id="R_kgDONl93Sw" data-category="Comments" data-category-id="DIC_kwDONl93S84Cl7yv" data-mapping="title" data-strict="1" data-reactions-enabled="1" data-emit-metadata="0" data-input-position="bottom" data-theme="preferred_color_scheme" data-lang="en" crossorigin="anonymous" async=""> </script>]]></content><author><name></name></author><category term="operating-systems"/><category term="linux"/><summary type="html"><![CDATA[Changing the hostname]]></summary></entry><entry><title type="html">Asus Prime X370-PRO and Fedora</title><link href="https://pratajo.github.io/blog/2022/asus-x370/" rel="alternate" type="text/html" title="Asus Prime X370-PRO and Fedora"/><published>2022-03-27T15:09:00+00:00</published><updated>2022-03-27T15:09:00+00:00</updated><id>https://pratajo.github.io/blog/2022/asus-x370</id><content type="html" xml:base="https://pratajo.github.io/blog/2022/asus-x370/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/asus-x370-480.webp 480w,/assets/img/asus-x370-800.webp 800w,/assets/img/asus-x370-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/asus-x370.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p> </p> <p>Whenever there is a BIOS update there is a need to change the following parameters. Well, some are optional.</p> <p>Advanced → CPU Configuration → SVM Mode → Enable</p> <p>Advanced → PCI Subsystem Settings → SR-IOV Support → Enable</p> <p>Advanced → Onboard Devices Configuration</p> <ul> <li>RGB LED Lighting → Disabled</li> <li>USB Power Delivery in Soft… → Enable</li> <li>Serial Port Configuration → Off</li> </ul> <p>Advanced → USB Configuration → Legacy USB Support → Disabled</p> <p>Advanced → AMD CBS → Power Supply Idle Control → Typical Current Idle (prevents Fedora from freezing frequently)</p> <p>Boot → CMS</p> <ul> <li>Fast Boot → Disabled</li> <li>Launch CMS → Disabled</li> <li>Secure Boot → Windows UEFI Mode</li> </ul> <p>Boot Configuration → AMI Native NVMe Driver Support → On</p> <p> </p> <script src="https://giscus.app/client.js" data-repo="pratajo/pratajo.github.io" data-repo-id="R_kgDONl93Sw" data-category="Comments" data-category-id="DIC_kwDONl93S84Cl7yv" data-mapping="title" data-strict="1" data-reactions-enabled="1" data-emit-metadata="0" data-input-position="bottom" data-theme="preferred_color_scheme" data-lang="en" crossorigin="anonymous" async=""> </script>]]></content><author><name></name></author><category term="operating-systems"/><category term="fedora"/><category term="linux"/><category term="asus"/><summary type="html"><![CDATA[Changing BIOS parameters for Fedora]]></summary></entry></feed>